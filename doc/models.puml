@startuml

interface models.Comparator {
~ boolean isEqualsColor(Coordinate)
}

interface models.Observer {
~ void initialize()
~ void begin()
~ void end()
~ void exit()
}

enum models.Color {
+  OS
+  XS
+  NONE
}

class models.Coordinate {
+ {static} DIMENSION: int = 3
# int getDimension()
+ String toString()
+ int hashCode()
+ boolean equals(Object)
}

abstract class models.Subject {
- observer: Observer
+ void subscribe(Observer)
+ void initialize()
+ void begin()
+ void end()
+ void exit()
}

interface models.Flat {
~ void put(Coordinate)
~ void remove(Coordinate)
~ Color take()
~ void changeTurn()
~ boolean isFull(Coordinate)
~ boolean isEmpty(Coordinate)
~ int getNumberOfPlayers()
~ void clear()
~ boolean isComplete()
~ boolean isExistTicTacToe()
~ Color getColor(Coordinate)
~ List<Coordinate> emptyCoordinates()
~ List<Coordinate> playerCoordinates()
}
class models.Turn {
- value: int
+ Color take()
+ int currentPlayer()
+ void changeTurn()
}
class models.Game {
- board: Board
+ void put(Coordinate)
+ void remove(Coordinate)
+ Color take()
+ int currentPlayer()
+ void change()
+ boolean isOccupiedByPlayer(Coordinate)
+ boolean isEmpty(Coordinate)
+ int getNumberOfPlayers()
+ void clear()
+ boolean isComplete()
+ boolean isExistTicTacToe()
+ Color getColor(Coordinate)
+ List<Coordinate> emptyCoordinates()
+ List<Coordinate> playerCoordinates()
+ void initialize()
+ void begin()
+ void end()
+ void exit()
}

class models.Board {
- flat: Map<Color, Set<Coordinate>>
- turn: Turn
- existTicTacToe: boolean
- {static} NUMBER_OF_PLAYERS: int = 2
- void createFlat(int)
~ Map<Color,Set<Coordinate>> getFlat()
~ void put(Coordinate)
+ int getNumberOfPlayers()
+ Color getColor(Coordinate)
+ boolean isComplete()
+ Color take()
+ int currentPlayer()
+ void changeTurn()
+ boolean isExistTicTacToe()
- boolean areCoordinatesInSameDirection(Set<Coordinate>)
~ boolean isEmpty(Coordinate)
~ boolean isOccupiedByPlayer(Coordinate)
~ void clear()
+ void remove(Coordinate)
+ List<Coordinate> getEmptyCoordinates()
+ List<Coordinate> getPlayerCoordinates()
- List<Coordinate> getCoordinates(Comparator)
+ String toString()
+ {static} void main(String[])
}

models.Game --> models.Board
models.Game ..> models.Observer
models.Game ..> models.Coordinate
models.Game ..> models.Color
models.Subject <|-- models.Board
models.Board --> models.Flat
models.Board ..> models.Coordinate
models.Board --> models.Turn
models.Board --> models.Color
models.Board ..> models.Comparator
models.Subject *--> models.Observer
models.coordinate.SquareBoundedCoordinate <|-- models.Coordinate


@enduml