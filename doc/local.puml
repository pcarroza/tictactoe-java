@startuml
class local.LocalRandomCoordinateController {
+ Coordinate getOrigin()
+ Coordinate getTarget()
+ Coordinate getTarget(Coordinate)
+ void accept(CoordinateControllerVisitor)
}
class local.LocalUserPlacementControllerBuilder {
+ void build()
}

class local.LocalMoveController {
- Coordinate origin
+ void put(Coordinate)
+ void remove(Coordinate)
+ ErrorReport validateOrigin(Coordinate)
+ ErrorReport validateTarget(Coordinate,Coordinate)
+ boolean isExistTicTacToe()
+ void accept(PlacementControllerVisitor)
+ void accept(OperationControllerVisitor)
}
abstract class local.LocalPlacementControllerBuilder {
# Game game
# LocalPlacementController[] controllers
+ {abstract}void build()
~ void build(LocalCoordinateController[])
~ LocalPlacementController getPlacementController()
}
abstract class local.LocalPlacementController {
- LocalCoordinateController coordinateController
+ ErrorReport validateTarget(Coordinate)
+ CoordinateController getCoordinateController()
}

class local.LocalUserCoordinateController {
+ Coordinate getOrigin()
+ Coordinate getTarget()
+ void accept(CoordinateControllerVisitor)
}

class local.LocalPutController {
+ void put(Coordinate)
+ void accept(PlacementControllerVisitor)
+ void accept(OperationControllerVisitor)
}
class local.LocalRandomPlacementControllerBuilder {
+ void build()
}
class local.LocalController {
- Game game
# Game getGame()
# int getNumberOfPlayers()
+ Color take()
+ void put(Coordinate)
+ void remove(Coordinate)
+ void clear()
+ boolean isExistTicTacToe()
+ void change()
+ boolean isEmpty(Coordinate)
+ boolean isOccupiedByPlayer(Coordinate)
+ Color getColor(Coordinate)
+ void initialize()
+ void end()
+ void begin()
+ void exit()
}

abstract class local.LocalOperationController {
+ {abstract}void accept(OperationControllerVisitor)
}
class local.LocalOperationControllerBuilder {
- LocalStartController localStartController
- LocalPlacementControllerBuilder[] builders
- LocalContinueController localContinueController
- Game game
+ void build()
~ void build(int)
+ LocalPlacementController getPlacementController()
+ LocalContinueController getContinueController()
+ LocalStartController getStartController()
}

abstract class local.LocalCoordinateController {
+ {abstract}Coordinate getOrigin()
+ {abstract}Coordinate getTarget()
}


local.LocalCoordinateController <|-- local.LocalRandomCoordinateController
local.LocalPlacementControllerBuilder <|-- local.LocalUserPlacementControllerBuilder
local.LocalPlacementController <|-- local.LocalMoveController
local.LocalOperationController <|-- local.LocalPlacementController
local.LocalCoordinateController <|-- local.LocalUserCoordinateController
local.LocalPlacementController <|-- local.LocalPutController
local.LocalPlacementControllerBuilder <|-- local.LocalRandomPlacementControllerBuilder
local.LocalController <|-- local.LocalOperationController
local.LocalController <|-- local.LocalCoordinateController

@enduml